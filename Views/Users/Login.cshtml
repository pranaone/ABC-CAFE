@model CafateriaSystem.Models.LoginViewModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container-fluid d-flex justify-content-center" style="margin-top:25px; padding:0; background-color: rgba(242, 242, 242,0)">

    <div class="container-fluid d-flex align-self-center;" style="background-color:rgba(31, 15, 15,0.2);  padding:15px; align-self:center; border:2px solid rgba(255,255,255,0.2);">
        <div class="container col-sm-4"  style="background-color: rgba(255, 255, 255,0);">
            <hr style="background-color:white;" />
            <h3 style="color:white; text-decoration-style:solid; text-decoration-color:black; margin-bottom:15px; ">Login</h3>
            <hr style="background-color:white;" />
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <h6 style="color:white;">Email: </h6>
                        <div>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email", } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <h6 style="color:white;">Password: </h6>
                        <div>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", })
                        </div>
                    </div>
                    <input type="submit" id="login" value="Login" class="btn btn-warning" />
                </div>
            }

        </div>

     </div>  

</div>
@if (TempData["Error"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("@TempData["Error"].ToString()");
        };
    </script>
}

